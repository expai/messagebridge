name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc sqlite3 libsqlite3-dev

    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        # Linux AMD64
        CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.version.outputs.VERSION }} -X main.buildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)" -o messagebridge .
        
        # Create directory structure for archive
        mkdir -p messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64
        cp messagebridge messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64/
        cp -r examples deployments scripts messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64/
        cp README.md QUICKSTART.md LICENSE CHANGELOG.md messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64/
        
        # Create archive
        chmod +x messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64/scripts/*.sh
        tar -czf messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64/
        
        # Create checksums
        sha256sum messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz > checksums.txt

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          CHANGELOG_CONTENT=$(cat CHANGELOG.md)
          DELIMITER=$(openssl rand -hex 16)
          echo "CHANGELOG<<$DELIMITER" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo "$DELIMITER" >> $GITHUB_OUTPUT
        else
          echo "CHANGELOG=–†–µ–ª–∏–∑ ${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: MessageBridge ${{ steps.version.outputs.VERSION }}
        body: |
          # MessageBridge ${{ steps.version.outputs.VERSION }}
          
          ## üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
          
          ### –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞:
          ```bash
          # –°–∫–∞—á–∞—Ç—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π (Ubuntu/Debian/Arch):
          curl -fsSL https://github.com/expai/messagebridge/releases/download/${{ steps.version.outputs.VERSION }}/messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz | tar -xz
          cd messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64
          
          # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
          ./scripts/check-requirements.sh
          
          # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
          sudo ./scripts/install.sh
          ```
          
          ### –û–ø—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ install.sh:
          
          #### `install.sh` - –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏:
          - **–ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤** - –ø–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ production —Å–µ—Ä–≤–µ—Ä–∞
          - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –û–° (Ubuntu/Debian/Arch Linux)
          - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (SQLite, nginx)
          - –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `messagebridge`
          - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç systemd service
          - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (HTTP-only)
          - **‚ö†Ô∏è SSL –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä—É—á–Ω—É—é –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏!**
          
          ```bash
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
          ./scripts/check-requirements.sh
          
          # –ü–æ–ª–Ω–∞—è production —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
          sudo ./scripts/install.sh
          
          # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (—Ç–æ–ª—å–∫–æ –±–∏–Ω–∞—Ä—å –∏ systemd, –±–µ–∑ nginx)
          sudo ./scripts/install.sh --minimal
          
          # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å nginx (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ --minimal)
          sudo ./scripts/install.sh --skip-nginx
          
          # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é)
          sudo ./scripts/install.sh --force
          ```
          
          ### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:
          
          –ü–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
          ```bash
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –û–°, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –ø–æ—Ä—Ç—ã –∏ –ø—Ä–∞–≤–∞
          ./scripts/check-requirements.sh
          ```
          
          ### –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:
          
          #### 1. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL:
          ```bash
          # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å certbot (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω):
          sudo apt install certbot python3-certbot-nginx  # Ubuntu/Debian
          sudo pacman -S certbot-nginx                    # Arch Linux
          
          # –ü–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:
          sudo certbot --nginx -d your-domain.com
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
          sudo certbot renew --dry-run
          ```
          
          #### 2. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:
          ```bash
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
          sudo systemctl status messagebridge
          
          # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
          sudo systemctl restart messagebridge
          
          # –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
          sudo journalctl -u messagebridge -f
          ```
          
          ## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          
          ### –°–∫—Ä–∏–ø—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ë–î (`scripts/stats.sh`):
          ```bash
          # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          ./scripts/stats.sh
          
          # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
          ./scripts/stats.sh --messages --page 1 --limit 10
          
          # –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
          ./scripts/stats.sh --status pending
          ./scripts/stats.sh --status failed
          
          # –§–∏–ª—å—Ç—Ä –ø–æ –æ—á–µ—Ä–µ–¥–∏
          ./scripts/stats.sh --queue payments
          
          # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
          ./scripts/stats.sh --message-id "msg-123"
          
          # –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫
          ./scripts/stats.sh --failed-details
          
          # –ê–Ω–∞–ª–∏–∑ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
          ./scripts/stats.sh --retry-analysis
          
          # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
          ./scripts/stats.sh --performance
          
          # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –æ—á–∏—Å—Ç–∫–µ –ë–î
          ./scripts/stats.sh --cleanup-suggestions
          
          # –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON
          ./scripts/stats.sh --json
          
          # –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV
          ./scripts/stats.sh --csv
          ```
          
          ## üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ
          
          ### –°–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–∏—è (`scripts/uninstall.sh`):
          
          ```bash
          # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ñ–∏–≥–∏)
          sudo ./scripts/uninstall.sh --safe
          
          # –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (—É–¥–∞–ª—è–µ—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ñ–∏–≥–∏)
          sudo ./scripts/uninstall.sh --full
          
          # –£–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          sudo ./scripts/uninstall.sh --nginx-only
          
          # –£–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ systemd service
          sudo ./scripts/uninstall.sh --service-only
          ```
          
          #### –ß—Ç–æ —É–¥–∞–ª—è–µ—Ç—Å—è –ø—Ä–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–µ–∂–∏–º–∞—Ö:
          
          **–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (`--safe`):**
          - ‚úÖ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏ —É–¥–∞–ª—è–µ—Ç systemd service
          - ‚úÖ –£–¥–∞–ª—è–µ—Ç –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª `/usr/local/bin/messagebridge`
          - ‚úÖ –£–¥–∞–ª—è–µ—Ç nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          - ‚ùå –°–û–•–†–ê–ù–Ø–ï–¢ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (`/var/lib/messagebridge/`)
          - ‚ùå –°–û–•–†–ê–ù–Ø–ï–¢ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (`/etc/messagebridge/`)
          - ‚ùå –°–û–•–†–ê–ù–Ø–ï–¢ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `messagebridge`
          
          **–ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (`--full`):**
          - ‚úÖ –£–¥–∞–ª—è–µ—Ç systemd service
          - ‚úÖ –£–¥–∞–ª—è–µ—Ç –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª
          - ‚úÖ –£–¥–∞–ª—è–µ—Ç nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          - ‚úÖ **–£–î–ê–õ–Ø–ï–¢ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö** (`/var/lib/messagebridge/`)
          - ‚úÖ **–£–î–ê–õ–Ø–ï–¢ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã** (`/etc/messagebridge/`)
          - ‚úÖ **–£–î–ê–õ–Ø–ï–¢ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** `messagebridge`
          
          ## üìÅ –°–æ–∑–¥–∞–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          
          ### –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è:
          
          #### –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã:
          - `/usr/local/bin/messagebridge` - –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
          - `/etc/systemd/system/messagebridge.service` - systemd service
          - `/etc/nginx/sites-available/messagebridge` - nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –Ω–µ --minimal)
          - `/etc/nginx/sites-enabled/messagebridge` - —Å–∏–º–ª–∏–Ω–∫ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
          
          #### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:
          - `/etc/messagebridge/config.yaml` - –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥ (–∏–∑ production-config.yaml)
          - `/etc/messagebridge/examples/` - –∫–æ–ø–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
          
          #### –î–∞–Ω–Ω—ã–µ –∏ –ª–æ–≥–∏:
          - `/var/lib/messagebridge/` - —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏ –¥–æ–º–∞—à–Ω—è—è –ø–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          - `/var/lib/messagebridge/messagebridge.db` - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö SQLite (—Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ)
          - `/var/log/messagebridge/` - –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ª–æ–≥–æ–≤
          - –õ–æ–≥–∏ systemd: `journalctl -u messagebridge`
          
          #### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –ø—Ä–∞–≤–∞:
          - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: `messagebridge:messagebridge` (—Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
          - –î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: `/var/lib/messagebridge`
          - –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å: `/var/lib/messagebridge`, `/var/log/messagebridge`
          
          ## üîß –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
          
          –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç:
          
          ### 1. –°–∫–∞—á–∞—Ç—å –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –∞—Ä—Ö–∏–≤:
          ```bash
          wget https://github.com/expai/messagebridge/releases/download/${{ steps.version.outputs.VERSION }}/messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz
          tar -xzf messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz
          cd messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64/
          ```
          
          ### 2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤—Ä—É—á–Ω—É—é:
          ```bash
          # 1. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –±–∏–Ω–∞—Ä—å
          sudo cp messagebridge /usr/local/bin/
          sudo chmod +x /usr/local/bin/messagebridge
          
          # 2. –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          sudo useradd -r -s /bin/false -d /var/lib/messagebridge messagebridge
          
          # 3. –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          sudo mkdir -p /etc/messagebridge /var/lib/messagebridge /var/log/messagebridge
          sudo chown messagebridge:messagebridge /var/lib/messagebridge /var/log/messagebridge
          
          # 4. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          sudo cp examples/production-config.yaml /etc/messagebridge/config.yaml
          sudo cp -r examples /etc/messagebridge/
          
          # 5. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å systemd service
          sudo cp deployments/systemd/messagebridge.service /etc/systemd/system/
          sudo systemctl daemon-reload
          sudo systemctl enable messagebridge
          sudo systemctl start messagebridge
          ```
          
          ### 3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å nginx (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):
          ```bash
          # –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
          sudo cp deployments/nginx/messagebridge /etc/nginx/sites-available/
          sudo ln -s /etc/nginx/sites-available/messagebridge /etc/nginx/sites-enabled/
          sudo nginx -t && sudo systemctl reload nginx
          ```
          
          ## üìã Health Check –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
          
          ### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
          ```bash
          # HTTP health check
          curl http://localhost:8080/health
          
          # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ worker'–∞
          curl http://localhost:8080/stats
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
          sudo nginx -t
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ systemd service
          sudo systemctl status messagebridge
          ```
          
          ## üìñ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–∞
          
          - `messagebridge` - –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª (Linux AMD64)
          - `examples/` - –ø—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
          - `scripts/install.sh` - —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
          - `scripts/uninstall.sh` - —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–µ–Ω–∏—è
          - `scripts/stats.sh` - —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
          - `scripts/check-requirements.sh` - —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
          - `deployments/systemd/` - —Ñ–∞–π–ª—ã –¥–ª—è systemd
          - `deployments/nginx/` - —à–∞–±–ª–æ–Ω—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
          - `README.md` - –ø–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
          - `QUICKSTART.md` - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
          - `LICENSE` - –ª–∏—Ü–µ–Ω–∑–∏—è
          - `CHANGELOG.md` - –∏—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
          
          ## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è
          
          1. **SSL –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω** –¥–ª—è production - HTTP-only –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          2. **Firewall** - —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ—Ä—Ç—ã 80, 443 –æ—Ç–∫—Ä—ã—Ç—ã
          3. **DNS** - –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ A-–∑–∞–ø–∏—Å—å –¥–æ–º–µ–Ω–∞ –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä
          4. **Backup** - —Ä–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π—Ç–µ –±—ç–∫–∞–ø `/var/lib/messagebridge/messagebridge.db`
          5. **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥** - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `scripts/stats.sh` –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—á–µ—Ä–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
          
          ## üêõ Troubleshooting
          
          ```bash
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
          sudo systemctl status messagebridge nginx
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏
          sudo journalctl -u messagebridge -f
          sudo journalctl -u nginx -f
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          sudo nginx -t
          messagebridge -config /etc/messagebridge/config.yaml --help
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
          ./scripts/stats.sh --summary
          
          # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
          ls -la /var/lib/messagebridge/
          ls -la /etc/messagebridge/
          ```
          
          ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz
        asset_name: messagebridge-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Checksums
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./checksums.txt
        asset_name: checksums.txt
        asset_content_type: text/plain